package layouts

import "gotth/template/view/components"

templ Base() {
	<!DOCTYPE html>
	<html lang="en" data-theme="pastel">
		<head>
			<title>ðŸ¥™ Ingredients</title>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link rel="stylesheet" href="/public/styles.css"/>
			<script src="https://unpkg.com/lucide@latest"></script>
			<script src="https://unpkg.com/alpinejs" defer></script>
			<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
			<script src="https://unpkg.com/htmx.org@2.0.4/dist/htmx.js" integrity="sha384-oeUn82QNXPuVkGCkcrInrS1twIxKhkZiFfr2TdiuObZ3n3yIeMiqcRzkIcguaof1" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/colorthief@2.3.0/dist/color-thief.min.js"></script>
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer"/>
		</head>
		<body class="antialiased min-h-screen flex flex-col">
			<div id="main-container" class="flex-grow">
				{ children... }
			</div>
			@components.Footer()
			<!-- Include this in your base layout or the specific page -->
			<div id="toast-container" class="toast toast-end z-50">
				<!-- Toasts will be added here dynamically -->
			</div>
			<script>
			// Listen for htmx:beforeSwap event
			document.body.addEventListener('htmx:beforeSwap', function(evt) {
				// Check if the response status code is 422
				if (evt.detail.xhr.status === 422) {
				// Prevent the default swap
				evt.detail.shouldSwap = false;
				
				// Get the error message from the response
				let errorMessage = "Validation failed";
				try {
					const response = JSON.parse(evt.detail.xhr.responseText);
					if (response.message) {
					errorMessage = response.message;
					}
				} catch (e) {
					// If not JSON or no message property, use the responseText or a default message
					errorMessage = evt.detail.xhr.responseText || errorMessage;
				}
				
				// Create toast element
				const toast = document.createElement('div');
				toast.className = 'alert alert-error';
				toast.innerHTML = `
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z" />
					</svg>
					<span>${errorMessage}</span>
				`;
				
				// Add to toast container
				const toastContainer = document.getElementById('toast-container');
				toastContainer.appendChild(toast);
				
				// Remove after 7 seconds
				setTimeout(() => {
					toast.classList.add('opacity-0', 'transition-opacity', 'duration-500');
					setTimeout(() => {
					toast.remove();
					}, 500);
				}, 7000);
				}
			});
			</script>
		</body>
	</html>
}

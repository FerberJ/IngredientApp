package components 

import (
	"gotth/template/backend/models"
	"gotth/template/view/components/recipe"
	"strconv"
)

templ Recipe(recipe models.Recipe, serving uint, isUsers bool) {
	<div itemscope itemtype="http://schema.org/Recipe" class="flex flex-col items-center w-full relative">
		if isUsers {

		}
		<!-- Optional but recommended structured data -->
		if recipe.RecipeCategory != "" {
			<meta itemprop="recipeCategory" content={ recipe.RecipeCategory }/>
		}
		if recipe.Cuisine != "" {
			<meta itemprop="recipeCuisine" content={ recipe.Cuisine }/>
		}
		<img
			itemprop="image"
			src={ "http://localhost:3000/images/" + recipe.Image }
			alt="Food"
			class="w-full h-110 object-cover"
			style="object-position: center 50%;"
		/>
		<div class="flex w-full justify-center">
			<div id="curved-corner-bottomright" class="h-20 -mt-25 hidden sm:block"></div>
			<div class="hidden sm:block h-20 w-10 -mt-20 bg-white rounded-tl-[2vw]"></div>
			<div class="flex -mt-20 w-full sm:w-120 justify-center bg-white rounded-tl-[2vw] sm:rounded-tl-[0vw] rounded-tr-[2vw] sm:rounded-tr-[0vw]">
				<h1 class="text-4xl font-bold my-4" itemprop="name">{ recipe.Name }</h1>
			</div>
			<div class="hidden sm:block h-20 w-10 -mt-20 rounded-tr-[2vw] bg-white"></div>
			<div id="curved-corner-bottomleft" class="h-20 -mt-25 hidden sm:block"></div>
		</div>
		<div class="w-full grid grid-cols-1 xs:grid-cols-1 sm:grid-cols-1 lg:grid-cols-2">
			<!--Descirption & Time-->
			<div class="mx-4 w-full flex justify-center lg:col-span-2">
				@recipe_components.Description(recipe)
			</div>
			<!-- Ingredients & Servings & bring -->
			<div class="mb-4 flex justify-center items-start">
				<div class="card bg-base-300 w-96 shadow-sm">
					<div class="card-body">
						<h2 class="card-title">Ingredients</h2>
						<div id="servings">
							@recipe_components.Servings(recipe.Ingredients, serving, recipe.ID)
						</div>
						<!-- Bring Integration -->
						<div class="my-4 flex w-full justify-center">
							<script async="async" src="//platform.getbring.com/widgets/import.js"></script>
							<div data-bring-import="https://ferber.io" data-bring-language="en" style="display:none"></div>
							<a href="https://www.getbring.com"></a>
						</div>
					</div>
				</div>
			</div>
			<!-- Instructions -->
			<div class="mb-4 ml-0 mr-0 xs:mr-20 sm:mr-20 lg:mr-10 xs:ml-20 sm:ml-20 lg:ml-0">
				<h2 class="text-2xl font-bold mb-2 text-center xs:text-center sm:text-center lg:text-left">Instructions</h2>
				for i, instruction := range recipe.Instructions {
					<div class="max-w mb-4" itemprop="recipeInstructions" itemscope itemtype="http://schema.org/HowToStep">
						<meta itemprop="position" content={ strconv.Itoa(i + 1) }/>
						<p class="mx-4 text-lg font-bold text-center xs:text-center sm:text-center lg:text-left" itemprop="name">{ strconv.Itoa(i+1) }. { instruction.Header }</p>
						<p class="mx-4 text-justify xs:text-justify sm:text-justify lg:text-left" itemprop="text">{ instruction.Text }</p>
					</div>
				}
			</div>
		</div>
	</div>
	<style>
		#curved-corner-bottomleft,
		#curved-corner-bottomright {
		width: 100px;
		height: 100px;
		overflow: hidden;
		position: relative;
		}


		#curved-corner-bottomleft:before {
			content: "";
			display: block;
			width: 100%;
			height: 100%;
			position: absolute;
			border-radius: 50%;
			bottom: 0;
			left: 0;
			box-shadow: -50px 50px 0 0 white;
		}

		#curved-corner-bottomright:before {
		content: "";
		display: block;
		width: 100%;
		height: 100%;
		position: absolute;
		border-radius: 50%;
		bottom: 0;
		right: 0;
		box-shadow: 50px 50px 0 0 white;
		}
	</style>
}
